name: Tests

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  schedule:
    - cron: '0 */12 * * *' # Every 12 hours

env:
  FMP_REPOSITORY: https://github.com/fabric8io/fabric8-maven-plugin.git
  FMP_REVISION: master

jobs:
  minikube:
    name: Generic Test using Minikube
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        minikube: [v1.25.1]
        kubernetes: [v1.23.7,v1.12.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.6.0
        with:
          minikube version: ${{ matrix.minikube }}
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: --force
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Checkout fabric8-maven-plugin
        run: |
          git clone "$FMP_REPOSITORY" \
          && cd ./fabric8-maven-plugin \
          && git  checkout "$FMP_REVISION" \
          && cd ..
      - name: Install fabric8-maven-plugin SNAPSHOT
        run: mvn -f ./fabric8-maven-plugin -B -DskipTests clean install
      - name: Install and Run Integration Tests
        run: ./mvnw -B -PKubernetes clean verify
      - name: Consolidate reports
        run: |
          mkdir -p ./reports/zero-config/spring-boot \
          && cp -R ./it/target/failsafe-reports ./reports \
          && cp -R ./zero-config/spring-boot/target/docker ./reports/zero-config/spring-boot \
          && cp -R ./zero-config/spring-boot/target/classes/META-INF ./reports/zero-config/spring-boot
      - name: Save reports as artifact
        uses: actions/upload-artifact@master
        with:
          name: Test reports (Minikube ${{ matrix.minikube }}-${{ matrix.kubernetes }})
          path: ./reports
  openshift:
    name: Generic Test using OpenShift Cluster
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        openshift: [v3.11.0,v3.9.0]
    steps:
      - name: Free up Space
        run: |
          sudo apt list --installed
          sudo apt-get purge -y                     \
            'aspnetcore.*'                          \
            'cabal-install.*'                       \
            'clang.*'                               \
            'dotnet.*'                              \
            'firefox.*'                             \
            'ghc.*'                                 \
            'google-chrome.*'                       \
            'libmagic.*'                            \
            'libmono.*'                             \
            'mono-.*'                               \
            'mysql.*'                               \
            'php.*'                                 \
            'ruby.*'
          sudo apt-get autoremove
          df -h
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup OpenShift
        uses: manusa/actions-setup-openshift@v1.1.3
        with:
          oc version: ${{ matrix.openshift }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Checkout fabric8-maven-plugin
        run: |
          git clone "$FMP_REPOSITORY" \
          && cd ./fabric8-maven-plugin \
          && git checkout "$FMP_REVISION" \
          && cd ..
      - name: Install fabric8-maven-plugin SNAPSHOT
        run: mvn -f ./fabric8-maven-plugin -B -DskipTests clean install
      - name: Install and Run Integration Tests
        run: ./mvnw -B -POpenShift clean verify
      - name: Consolidate reports
        run: |
          mkdir -p ./reports/zero-config/spring-boot \
          && cp -R ./it/target/failsafe-reports ./reports \
          && cp -R ./zero-config/spring-boot/target/docker ./reports/zero-config/spring-boot \
          && cp -R ./zero-config/spring-boot/target/classes/META-INF ./reports/zero-config/spring-boot
      - name: Save reports as artifact
        uses: actions/upload-artifact@master
        with:
          name: Test reports (OpenShift ${{ matrix.openshift }})
          path: ./reports




